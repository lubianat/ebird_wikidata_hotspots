var mymap = L.map('mapid').setView([{{ lat }}, {{ lng }}], 13);

var iconTemplate = (color, strength) => L.divIcon({
    className: 'custom-div-icon',
    html: `<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30'><circle cx='15' cy='15' r='10' stroke='black' stroke-width='2' fill='${color}' fill-opacity='${strength}'/></svg>`,
    iconSize: [30, 30],
    iconAnchor: [15, 15]
});

var blueIcons = [
    iconTemplate('blue', 0.25),
    iconTemplate('blue', 0.5),
    iconTemplate('blue', 0.75),
    iconTemplate('blue', 1)
];

var redIcons = [
    iconTemplate('red', 0.25),
    iconTemplate('red', 0.5),
    iconTemplate('red', 0.75),
    iconTemplate('red', 1)
];


L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
        '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
    maxZoom: 18
}).addTo(mymap);

var data = {{ data|tojson }};

for (var i = 0; i < data.length; i++) {
    var iconIndex;
    if (data[i].numSpeciesAllTime < 50) {
        iconIndex = 0;
    } else if (data[i].numSpeciesAllTime < 100) {
        iconIndex = 1;
    } else if (data[i].numSpeciesAllTime < 200) {
        iconIndex = 2;
    } else {
        iconIndex = 3;
    }

    var icon = data[i].wikidata ? blueIcons[iconIndex] : redIcons[iconIndex];

    var marker = L.marker([data[i].lat, data[i].lng], { icon: icon }).addTo(mymap);

    var popupContent = "<b>" + data[i].locName + "</b><br>" + data[i].countryCode + "<br>All time species count: " + data[i].numSpeciesAllTime + "<br>locId: " + data[i].locId;

    if (data[i].wikidata) {
        popupContent += "<br><a href='" + data[i].wikidata + "' target='_blank'>View on Wikidata</a>";
    } else {
        var searchUrl = "https://www.wikidata.org/wiki/Special:Search?search=" + encodeURIComponent(data[i].locName);
        popupContent += "<br><a href='" + searchUrl + "' target='_blank'>Search on Wikidata</a>";
    }
    if (data[i].image) {
      var fileName = data[i].image.split("/").pop();
      var commonsLink = "https://commons.wikimedia.org/wiki/File:" + fileName;
      var imageSource = data[i].image
      popupContent += "<br><a href='" + commonsLink + "' target='_blank'><img src='" + imageSource + "' alt='Image' style='max-width: 100%; max-height: 200px;'></a>";
    }
    popupContent += "<br><a href=https://ebird.org/hotspot/" + data[i].locId + " target='_blank'>View on eBird</a>";

    marker.bindPopup(popupContent);
}


// Adding legend
var legend = L.control({ position: 'bottomright' });

legend.onAdd = function (map) {
    var div = L.DomUtil.create('div', 'info legend');
    div.style.backgroundColor = 'white';
    div.style.padding = '10px';
    div.innerHTML = '<h4>#species</h4>';

    var grades = [0, 50, 100, 200];
    var strengths = [0.25, 0.5, 0.75, 1];
    var colors = ['blue', 'red'];

    for (var i = 0; i < grades.length; i++) {
        div.innerHTML += '<div>';
        for (var c = 0; c < colors.length; c++) {
            div.innerHTML +=
                `<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30' style='margin-right: 5px;'>
                    <circle cx='15' cy='15' r='10' stroke='black' stroke-width='2' fill='${colors[c]}' fill-opacity='${strengths[i]}'/>
                </svg>`;
        }
        div.innerHTML += `<span>: ${grades[i]} ${(grades[i + 1] ? '&ndash;' + grades[i + 1] : '+')}</span></div>`;
    }
    return div;
};

legend.addTo(mymap);

